#!/bin/sh

. /usr/local/bin/loadmyvars.sh

name=$1
boot=$2
deployapp=$3

copy_var_ports() {
    local name=$1
    if [ -e /var/ports ]; then
        rsync -qalmP --exclude work /var/ports/ $( ioc-pathof ${name} )/var/ports/
    fi
}

save_var_ports() {
    local name=$1
    rsync -qalmP --exclude work $( ioc-pathof ${name} )/var/ports/ /var/ports/
}

if [ "x" = "x${NIC}" ]; then
    NIC="lo1"
    if ! ifconfig ${NIC} >/dev/null ; then
        ifconfig ${NIC} create
    fi
fi

if ! iocage list -r | grep 'RELEASE' >/dev/null 2>/dev/null ; then
    ioc-setup
    if ! iocage list -r | grep 'RELEASE' >/dev/null 2>/dev/null ; then
        echo "ERROR: iocage release doesn't exist, something went wrong."
        exit 1
    fi
fi

if ! iocage get tag ${name} >/dev/null 2>/dev/null; then
    # typically only in here if deploying a single app not with _deploy_jails, eg.
    # env NIC=lo1 IP=10.7.7.7
    if [ "x" = "x${IP}" ]; then
        echo "Usage: env IP=10.7.7.253 ${0##*/} name boot_on/off app_name"
        exit 1
    fi
    echo "Creating: ${name} on ${NIC} w/ IP ${IP}"
    ioc-newjail ${name} "${NIC}|${IP}"
fi
if [ "x" = "x${boot}" ]; then
    boot=off
fi
if [ "x" = "x${deployapp}" ]; then
    deployapp=${name}
fi
sysrc -f $( ioc-pathof ${name} )/etc/rc.conf.d/firstboot_jail firstboot_jail_deploy=${deployapp}

### install some deploy_* scripts for firstboot
install -d -m 755 -o root -g wheel $( ioc-pathof ${name} )/usr/local/bin
for i in $( ls /usr/local/bin/deploy_* ) ; do
    install -C -m 755 $i $( ioc-pathof ${name} )/usr/local/bin/
done

# PRESTART COPY
case ${name} in
    squid|builder|buildersquidpkg|builderffmpegpkg|buildergitlabpkg)
        copy_var_ports ${name}
    ;;
    gitlab)
        iocage set allow_sysvipc=1 ${name}
        copy_var_ports ${name}
        ## only if we are installing via src to cache rubygems
        deploy_squid_sslcert_fetch ${name}
        # Set jail ip as FQDN so git-shell works
        grep -v " ${FQDN}" $( ioc-pathof ${name} )/etc/hosts >$( ioc-pathof ${name} )/etc/hosts.tmp
        cat $( ioc-pathof ${name} )/etc/hosts.tmp >$( ioc-pathof ${name} )/etc/hosts
        echo "${IPNET}`jailip gitlab` ${FQDN}" >>$( ioc-pathof ${name} )/etc/hosts
    ;;
    owncloud)
        iocage set allow_sysvipc=1 ${name}
        if [         -d /root/local/owncloud ]; then
            mkdir -p                          $( ioc-pathof ${name} )/root/local/owncloud
            rsync -qalmP /root/local/owncloud/ $( ioc-pathof ${name} )/root/local/owncloud/
        fi
    ;;
    horde)
        iocage set allow_sysvipc=1 ${name}
    ;;
esac

iocage start ${name}
iocage set boot=${boot} ${name}

# AFTER START COPY
case ${name} in
    builder|buildersquidpkg|builderffmpegpkg|buildergitlabpkg)
        save_var_ports ${name}
    ;;
    owncloud)
        rsync -qalmP $( ioc-pathof ${name} )/root/local/owncloud/ /root/local/owncloud/
    ;;
esac
