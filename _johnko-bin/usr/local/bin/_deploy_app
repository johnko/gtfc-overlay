#!/bin/sh

jailip() {
    local name
    local num
    if ls /usr/local/etc/deployjails.conf.d/* >/dev/null 2>&1 ; then
        cat /usr/local/etc/deployjails.conf.d/* \
        | while read num name ; do
            case "$num" in "#"*|"") continue; esac
            if [ "x" != "x${num}" ] && [ "x" != "x${name}" ]; then
                #echo "debug: search ${1}, name ${name}"
                if [ "x${1}" = "x${name}" ]; then
                    RESULT=$(( count + num ))
                    #echo "debug: match ${num}, result ${RESULT}"
                    echo "${RESULT}"
                fi
            fi
        done
    fi
}

copy_var_ports() {
    local name=$1
    if [ -e /var/ports ]; then
        rsync -qalmP --exclude work /var/ports/ $( ioc-pathof ${name} )/var/ports/
    fi
}

save_var_ports() {
    local name=$1
    rsync -qalmP --exclude work $( ioc-pathof ${name} )/var/ports/ /var/ports/
}

copysslselfcert() {
    if [ "x" != "x${HTTP_PROXY}" ]; then
        PROXYIP=$( echo $HTTP_PROXY | awk -F/ '{print $NF}' | awk -F: '{print $1}' )
        if [ "x10.7.7.1" = "$PROXYIP" ]; then
            cat $( ioc-pathof squid )/usr/local/etc/squid/public.pem >>$( ioc-pathof ${1} )/usr/local/share/certs/ca-root-nss.crt
        else
            curl --output $( ioc-pathof ${1} )/root/public-${PROXYIP}.pem http://${PROXYIP}:3127/public.pem
            cat           $( ioc-pathof ${1} )/root/public-${PROXYIP}.pem >>$( ioc-pathof ${1} )/usr/local/share/certs/ca-root-nss.crt
        fi
    else
        cat $( ioc-pathof squid )/usr/local/etc/squid/public.pem >>$( ioc-pathof ${1} )/usr/local/share/certs/ca-root-nss.crt
    fi
}

if [ "x" = "x${NIC}" ]; then
    NIC="lo1"
    if ! ifconfig ${NIC} >/dev/null ; then
        ifconfig ${NIC} create
    fi
fi

if ! iocage list -r | grep 'RELEASE' >/dev/null 2>/dev/null ; then
    ioc-setup
    if ! iocage list -r | grep 'RELEASE' >/dev/null 2>/dev/null ; then
        echo "ERROR: iocage release doesn't exist, something went wrong."
        exit 1
    fi
fi

name=$1
if ! iocage get tag ${name} >/dev/null 2>/dev/null; then
    # typically only in here if deploying a single app not with _deploy_jails, eg.
    # env NIC=lo1 IP=10.7.7.7
    if [ "x" = "x${IP}" ]; then
        echo "Usage: env IP=10.7.7.253 ${0##*/} name boot_on/off app_name"
        exit 1
    fi
    echo "Creating: ${name} on ${NIC} w/ IP ${IP}"
    ioc-newjail ${name} "${NIC}|${IP}"
fi
boot=$2
if [ "x" = "x${boot}" ]; then
    boot=off
fi
deployapp=$3
if [ "x" = "x${deployapp}" ]; then
    deployapp=${name}
fi
sysrc -f $( ioc-pathof ${name} )/etc/rc.conf.d/firstboot_jail firstboot_jail_deploy=${deployapp}

# PRESTART COPY
case ${name} in
    squid|gitlab|builder|buildersquidpkg|builderffmpegpkg|buildgitlabpkg)
        copy_var_ports ${name}
    ;;
    owncloud)
        if [         -d /root/local/owncloud ]; then
            mkdir -p                          $( ioc-pathof ${name} )/root/local/owncloud
            rsync -qalmP /root/local/owncloud/ $( ioc-pathof ${name} )/root/local/owncloud/
        fi
    ;;
    gitlab)
        ## only if we are installing via src to cache rubygems
        #copysslselfcert ${name}
        # Set jail ip as FQDN so git-shell works
        grep -v " ${FQDN}" $( ioc-pathof ${name} )/etc/hosts >$( ioc-pathof ${name} )/etc/hosts.tmp
        cat $( ioc-pathof ${name} )/etc/hosts.tmp >$( ioc-pathof ${name} )/etc/hosts
        echo "${IPNET}`jailip gitlab` ${FQDN}" >>$( ioc-pathof ${name} )/etc/hosts
    ;;
esac

iocage start ${name}
iocage set boot=${boot} ${name}

# AFTER START COPY
case ${name} in
    squid|gitlab|builder|buildersquidpkg|builderffmpegpkg|buildgitlabpkg)
        save_var_ports ${name}
    ;;
    owncloud)
        rsync -qalmP $( ioc-pathof ${name} )/root/local/owncloud/ /root/local/owncloud/
    ;;
esac
