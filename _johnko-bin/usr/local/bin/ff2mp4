#!/bin/sh

. /usr/local/bin/loadmyvars.sh

if [ "x" = "x$PERSONALMNT" ]; then
    PERSONALMNT=/vault/data
fi

  INPATH=${PERSONALMNT}/ff/_convertqueue
DONEPATH=${PERSONALMNT}/ff/_processed
 OUTPATH=${PERSONALMNT}/ff/mp4

install -d -m 755 -o urep ${INPATH}
install -d -m 755 -o urep ${DONEPATH}
install -d -m 755 -o urep ${OUTPATH}
chown -R urep ${INPATH}
chown -R urep ${DONEPATH}
chown -R urep ${OUTPATH}

nameendswithmp4() {
    if echo "${line}" | grep '\.mp4$' > /dev/null ; then
        # 0 means no error, so you can do "if nameendswithmp4 ; then"
        return 0
    fi
    # 1 means error
    return 1
}

audioisaac() {
    if ffprobestream "$1" | grep 'Audio: *aac' > /dev/null ; then
        # 0 means no error, so you can do "if nameendswithmp4 ; then"
        return 0
    fi
    # 1 means error
    return 1
}

videoish264() {
    if ffprobestream "$1" | grep 'Video: *h264' > /dev/null ; then
        # 0 means no error, so you can do "if nameendswithmp4 ; then"
        return 0
    fi
    # 1 means error
    return 1
}

nometatitle() {
    if ffmetadata "$1" | grep 'title' > /dev/null ; then
        # 1 means title was found, dont pass
        return 1
    fi
    # 0 means no title, ok to pass
    return 0
}

ls -1 "${INPATH}" \
| while read line ; do
    if [ "x" != "x${line}" ]; then
        if [ ! -e "${OUTPATH}/${line}.mp4" ]; then
            echo "${line}"
            # check if file is already .mp4, h264 and aac, if so just move it
            if nameendswithmp4 && audioisaac "${INPATH}/${line}" && videoish264 "${INPATH}/${line}" && nometatitle "${INPATH}/${line}" ; then
                echo "file is already .mp4, h264 and aac"
                ln "${INPATH}/${line}" "${OUTPATH}/${line}"
                mv "${INPATH}/${line}" "${DONEPATH}/${line}"
            else
                #echo "No, name ends with somethin else"
                if audioisaac "${INPATH}/${line}" && videoish264 "${INPATH}/${line}" ; then
                    echo "re-containerize in mp4"
                    su -l urep -c sh <<EOF
/usr/local/bin/ffmpeg -hide_banner -i "${INPATH}/${line}" -map_metadata -1 -acodec copy                                    -vcodec copy                                                                                                   -threads 0 "${OUTPATH}/${line}.mp4"
EOF
                    mv "${INPATH}/${line}" "${DONEPATH}/${line}"
                elif audioisaac "${INPATH}/${line}" ; then
                    echo "re-encode video because audio is fine"
                    su -l urep -c sh <<EOF
/usr/local/bin/ffmpeg -hide_banner -i "${INPATH}/${line}" -map_metadata -1 -acodec copy                                    -vcodec libx264 -preset slow -profile:v baseline -level 30 -maxrate 10000000 -bufsize 10000000 -b 1200k -f mp4 -threads 0 "${OUTPATH}/${line}.mp4"
EOF
                    mv "${INPATH}/${line}" "${DONEPATH}/${line}"
                elif videoish264 "${INPATH}/${line}" ; then
                    echo "re-encode audio because video is fine"
                    su -l urep -c sh <<EOF
/usr/local/bin/ffmpeg -hide_banner -i "${INPATH}/${line}" -map_metadata -1 -acodec aac -ac 2 -strict experimental -ab 160k -vcodec copy                                                                                            -f mp4 -threads 0 "${OUTPATH}/${line}.mp4"
EOF
                    mv "${INPATH}/${line}" "${DONEPATH}/${line}"
                else
                    echo "re-encode audio and video"
                    su -l urep -c sh <<EOF
/usr/local/bin/ffmpeg -hide_banner -i "${INPATH}/${line}" -map_metadata -1 -acodec aac -ac 2 -strict experimental -ab 160k -vcodec libx264 -preset slow -profile:v baseline -level 30 -maxrate 10000000 -bufsize 10000000 -b 1200k -f mp4 -threads 0 "${OUTPATH}/${line}.mp4"
EOF
                    mv "${INPATH}/${line}" "${DONEPATH}/${line}"
                fi
            fi
        fi
    fi
done
