#!/bin/sh

# TODO, doens't allow psuh

. /usr/local/bin/loadmyvars.sh

if [ "x" == "x${GITLABSRC}" ]; then
    GITLABSRC=https://gitlab.com/
fi

DB="gitlabhq_production"
DBUSER="git"
DBPASS="password"
ROOTPASS="password"
BRANCH="8-0-stable" # 7-14-stable"

if [ "x" != "x${GITLABROOTPASS}" ]; then
    ROOTPASS=${GITLABROOTPASS}
fi
if [ "x" != "x${GITLABDBPASS}" ]; then
    DBPASS=${GITLABDBPASS}
fi
if [ "x" != "x${GITLABBRANCH}" ]; then
    BRANCH=${GITLABBRANCH}
fi

# Based on https://www.b1c1l1.com/blog/2011/05/09/using-utf-8-unicode-on-freebsd/
# and https://github.com/gitlabhq/gitlab-recipes/blob/master/install/freebsd/freebsd-10.md
# and https://blog.assemblyco.de/installing-gitlab-on-freebsd-10/

# 0 jail needs export jail_**MY_JAIL_NAME**_parameters="allow.sysvipc=1"
if sysctl -a | grep security.jail.sysvipc_allowed >/dev/null ; then
    if sysctl security.jail.sysvipc_allowed | grep 0 >/dev/null ; then
        echo "This jail is not configured to allow sysvipc."
        echo "you need to add jail_example_parameters=\"allow.sysvipc=1\""
        exit 1
    fi
fi
if sysctl security.jail.jailed | grep 0 >/dev/null ; then
    echo "Other services: openntpd"
    sysrc openntpd_enable="YES"
    service openntpd start
fi
if [ "x" == "x${FQDN}" ]; then
    echo "Please set or export variable FQDN"
    exit 1
fi
if [ "x" == "x${HTTP_PROXY}" ]; then
    echo "ERROR: expecting HTTP_PROXY"
    exit 1
fi


echo "1 UTF-8"
#pkg install -y sudo
#if ! locale | grep 'UTF-8' ; then
#    patch -N /etc/login.conf <<EOF
#EOF
#    sudo cap_mkdb /etc/login.conf
#fi


echo "2 Dependencies"
# to overwrite mailer.conf
yes y | pkg install -fy postfix
pkg install -y sudo bash icu cmake pkgconf git nginx ruby ruby21-gems logrotate redis postgresql94-server krb5 node lang/go
if [ ! -e /usr/local/bin/createuser ]; then
    echo "ERROR: postgresql install failed"
    exit 1
fi
gem install bundler --no-ri --no-rdoc


echo "3 git user"
echo "git:211:::::gitosis user:/usr/local/git:/bin/sh:" | adduser -w no -f -


echo "4 postgresql"
# different uid so shared memory of postgresql don't clash
deploy_postgresql94 1100 ${DB} ${DBUSER} ${DBPASS}


echo "5 redis"
deploy_redis_unix
# Add git user to redis group
pw groupmod redis -m git


echo "6 gitlab"
mkdir -p /usr/local/www
# permission for git to create gitlab
chown git /usr/local/www
if [ ! -d /usr/local/www/gitlab ]; then
    cd /usr/local/www
    sudo -u git -H git clone --depth 1 ${GITLABSRC}gitlab-org/gitlab-ce.git -b ${BRANCH} gitlab
fi
if [ ! -d /usr/local/www/gitlab ]; then
    echo "ERROR: couldn't clone gitlab"
    exit 1
fi
chown -R git /usr/local/www/gitlab
cd /usr/local/www/gitlab
sudo -u git -H cp /usr/local/www/gitlab/config/gitlab.yml.example /usr/local/www/gitlab/config/gitlab.yml
#The option host: should be set to your domain, e.g. "gitlab.mysite.com".
#The line bin_path: should be set to FreeBSD's git location: /usr/local/bin/git.
#sudo -u git -H vi config/gitlab.yml
if sysctl security.jail.jailed | grep 1 >/dev/null ; then
    cat /usr/local/www/gitlab/config/gitlab.yml.example \
    | sed 's/# ssh_port: 22/ssh_port: 23/' \
    | sed "s/host: localhost/host: ${FQDN}/" \
    | sed 's/port: 80/port: 443/' \
    | sed 's/https: false/https: true/' \
    | sed 's;bin_path: /usr/bin/git;bin_path: /usr/local/bin/git;' \
    | sed 's; /home/git/; /usr/local/www/;g' \
    >/usr/local/www/gitlab/config/gitlab.yml
#    | sed 's/# email_enabled: true/email_enabled: false/' \
else
    cat /usr/local/www/gitlab/config/gitlab.yml.example \
    | sed "s/host: localhost/host: ${FQDN}/" \
    | sed 's/port: 80/port: 443/' \
    | sed 's/https: false/https: true/' \
    | sed 's;bin_path: /usr/bin/git;bin_path: /usr/local/bin/git;' \
    | sed 's; /home/git/; /usr/local/www/;g' \
    >/usr/local/www/gitlab/config/gitlab.yml
#    | sed 's/# email_enabled: true/email_enabled: false/' \
fi
cd /usr/local/www/gitlab
chown -R git /usr/local/www/gitlab/log/
chown -R git /usr/local/www/gitlab/tmp/
chmod -R u+rwX,go-w /usr/local/www/gitlab/log/
chmod -R u+rwX /usr/local/www/gitlab/tmp/
sudo -u git -H mkdir /usr/local/www/gitlab-satellites
sudo -u git -H chmod u+rwx,g=rx,o-rwx /usr/local/www/gitlab-satellites
sudo -u git -H chmod -R u+rwX /usr/local/www/gitlab/tmp/pids/
sudo -u git -H chmod -R u+rwX /usr/local/www/gitlab/tmp/sockets/
sudo -u git -H chmod 0750 /usr/local/www/gitlab/public/uploads/
sudo -u git -H cp /usr/local/www/gitlab/config/unicorn.rb.example /usr/local/www/gitlab/config/unicorn.rb
# Set the number of workers to at least the number of cores
#sudo -u git -H vi config/unicorn.rb
cat /usr/local/www/gitlab/config/unicorn.rb.example \
| sed 's/worker_processes 3/worker_processes 2/' \
| sed 's;\"/home/git/gitlab;\"/usr/local/www/gitlab;g' \
>/usr/local/www/gitlab/config/unicorn.rb
sudo -u git -H cp config/initializers/rack_attack.rb.example config/initializers/rack_attack.rb
# Configure Git global settings for git user, useful when editing via web
# Edit user.email according to what is set in gitlab.yml
sudo -u git -H git config --global user.name "GitLab"
sudo -u git -H git config --global user.email "example@example.com"
sudo -u git -H git config --global core.autocrlf "input"
sudo -u git -H cp /usr/local/www/gitlab/config/resque.yml.example /usr/local/www/gitlab/config/resque.yml
# Configure Redis to use the modified socket path
# Change 'production' line to 'unix:/var/run/redis/redis.sock'
#sudo -u git -H vi config/resque.yml
cat /usr/local/www/gitlab/config/resque.yml.example \
>/usr/local/www/gitlab/config/resque.yml
sudo -u git -H cp /usr/local/www/gitlab/config/database.yml.postgresql /usr/local/www/gitlab/config/database.yml
sudo -u git -H env HTTP_PROXY=${HTTP_PROXY} bundle install --deployment --without development test mysql aws


echo "7 GitLab Shell"
GITLAB_SHELL_VERSION=$(cat /usr/local/www/gitlab/GITLAB_SHELL_VERSION | tr -d '\n')
sudo -u git -H env HTTP_PROXY=${HTTP_PROXY} bundle exec rake gitlab:shell:install[v${GITLAB_SHELL_VERSION}] REDIS_URL=unix:/var/run/redis/redis.sock RAILS_ENV=production
# manually fix permisions so the checks will pass
chown git:git /usr/local/www/repositories
chmod ug+rwX,o-rwx /usr/local/www/repositories/
chmod -R ug-s /usr/local/www/repositories/
find /usr/local/www/repositories/ -type d -print0 | sudo xargs -0 chmod g+s
# Edit the gitlab-shell config
# Change the 'socket' option to '/var/run/redis/redis.sock'
# Change the 'gitlab_url' option to 'http://localhost:8080/'
# Don't bother configuring any SSL stuff in here because it's used internally
#sudo -u git -H vi /usr/local/www/gitlab-shell/config.yml
#TODO cat /usr/local/www/gitlab-shell/config.yml | sed 's;;;' | tee /usr/local/www/gitlab-shell/config.yml


echo "8 Initialise Database"
yes yes | sudo -u git -H env HTTP_PROXY=${HTTP_PROXY} bundle exec rake gitlab:setup RAILS_ENV=production GITLAB_ROOT_PASSWORD=${ROOTPASS}


echo "9 Init script"
#wget -O /usr/local/etc/rc.d/gitlab https://gitlab.com/gitlab-org/gitlab-recipes/raw/master/init/init/freebsd/gitlab-unicorn
install -m 755 -o root -g wheel ~/git/deploy/usr/local/etc/rc.d/gitlab /usr/local/etc/rc.d/gitlab


echo "10 compile"
cd /usr/local/www/gitlab
sudo -u git -H env HTTP_PROXY=${HTTP_PROXY} bundle exec rake gitlab:env:info RAILS_ENV=production
sudo -u git -H env HTTP_PROXY=${HTTP_PROXY} bundle exec rake assets:precompile RAILS_ENV=production
sudo -u git -H bundle exec rake gitlab:check RAILS_ENV=production


echo "11 gitlab-git-http-server"
cd /usr/local/www
sudo -u git -H git clone --depth 1 https://gitlab.com/gitlab-org/gitlab-git-http-server.git gitlab-git-http-server
cd /usr/local/www/gitlab-git-http-server
sudo -u git -H make
# permission back to normal
chown root /usr/local/www


echo "12 start"
sysrc gitlab_enable="YES"
service gitlab start


echo "13 nginx"
deploy_nginx
mkdir -p /var/log/nginx
#wget -O /usr/local/etc/nginx/sites-enabled/gitlab.conf https://gitlab.com/gitlab-org/gitlab-ce/raw/master/lib/support/nginx/gitlab-ssl
#cp /usr/local/www/gitlab/lib/support/nginx/gitlab /usr/local/etc/nginx/sites-enabled/gitlab.conf
#cat /usr/local/www/gitlab/lib/support/nginx/gitlab \
#| sed 's/gzip_static on;/#gzip_static on;/' \
cat ~/git/deploy/usr/local/etc/nginx/sites-available/gitlab \
| sed "s/localhost.localdomain/${FQDN}/" \
>/usr/local/etc/nginx/sites-enabled/gitlab
chmod 644 /usr/local/etc/nginx/sites-enabled/gitlab
#pw user mod www -G git
service nginx restart


echo "14 Other services: SSH"
if sysctl security.jail.jailed | grep 1 >/dev/null ; then
    cat /etc/ssh/sshd_config \
    | sed 's/#Port 22/Port 23/' \
    >/etc/ssh/sshd_config.tmp
    cat /etc/ssh/sshd_config.tmp >/etc/ssh/sshd_config
    rm /etc/ssh/sshd_config.tmp
fi
sshd-config
service sshd start


echo "15 Other services: mail"
deploy_postfix


JAILIP=`ifconfig | grep inet | awk '{print $2}'`
echo
cat <<EOF
Visit https://${JAILIP}/
Login as root:${ROOTPASS}
Repos to clone:
    https://github.com/johnko/*
    https://github.com/johnko/dtfc.git
    https://github.com/qq99/echoplexus.git
    https://gitlab.com/gitlab-org/gitlab-ce.git
EOF
